# -*- coding: utf-8 -*-
"""task6gpt4p1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ECH6_TjyBVbcgn1RTlxCkElLJnCiFo_l
"""

from flask import Flask, request, jsonify
import sqlite3

app = Flask(__name__)


def init_db():
    conn = sqlite3.connect("ecommerce.db")
    c = conn.cursor()
    c.execute(
        """
        CREATE TABLE IF NOT EXISTS reviews (
            user_id INTEGER,
            product_id INTEGER,
            review_text TEXT,
            review_score INTEGER
        )
    """
    )
    c.execute(
        """
        CREATE TABLE IF NOT EXISTS purchases (
            user_id INTEGER,
            product_id INTEGER
        )
    """
    )
    conn.commit()
    conn.close()


@app.route("/submit_review", methods=["POST"])
def submit_review():
    user_id = request.form.get("user_id")
    product_id = request.form.get("product_id")
    review_text = request.form.get("review_text")
    review_score = request.form.get("review_score")

    if not review_text or not review_score:
        return jsonify({"error": "Both text review and review score are required"}), 400

    try:
        review_score = int(review_score)
    except ValueError:
        return jsonify({"error": "Review score must be an integer"}), 400

    if review_score < 1 or review_score > 5:
        return jsonify({"error": "Review score must be between 1 and 5"}), 400

    conn = sqlite3.connect("ecommerce.db")
    c = conn.cursor()

    # Check if user has purchased the product
    c.execute(
        "SELECT * FROM purchases WHERE user_id = ? AND product_id = ?",
        (user_id, product_id),
    )
    purchase = c.fetchone()
    if not purchase:
        conn.close()
        return jsonify({"error": "User has not purchased this product"}), 400

    # Insert the review
    c.execute(
        "INSERT INTO reviews (user_id, product_id, review_text, review_score) VALUES"
        " (?, ?, ?, ?)",
        (user_id, product_id, review_text, review_score),
    )
    conn.commit()
    conn.close()

    return jsonify({"message": "Review submitted successfully"})


@app.route("/add_purchase", methods=["POST"])
def add_purchase():
    user_id = request.form.get("user_id")
    product_id = request.form.get("product_id")

    conn = sqlite3.connect("ecommerce.db")
    c = conn.cursor()
    c.execute(
        "INSERT INTO purchases (user_id, product_id) VALUES (?, ?)",
        (user_id, product_id),
    )
    conn.commit()
    conn.close()

    return jsonify({"message": "Test purchase added successfully"})


if __name__ == "__main__":
    init_db()
    app.run(debug=True)