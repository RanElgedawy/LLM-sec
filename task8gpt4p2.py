# -*- coding: utf-8 -*-
"""task8gpt4p2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ECH6_TjyBVbcgn1RTlxCkElLJnCiFo_l
"""

from flask import Flask, request, jsonify
import sqlite3
import json

app = Flask(__name__)

# Database setup
def initialize_db():
    conn = sqlite3.connect('ecommerce.db')
    cursor = conn.cursor()

    # Create or update the users table
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT,
            address TEXT,
            payment_info TEXT,
            logged_in BOOLEAN
        )
    ''')
    # If you've already run the app, and the users table is missing the 'username' column,
    # you need to either manually update the table or delete it so it can be recreated.

    # Create or update the transactions table
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS transactions (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            total_amount REAL,
            status TEXT
        )
    ''')

    conn.commit()
    conn.close()

initialize_db()

# Function to check if the user is logged in and get card info
def get_user_info(user_id):
    conn = sqlite3.connect('ecommerce.db')
    cursor = conn.cursor()
    cursor.execute('SELECT logged_in, payment_info, address FROM users WHERE id = ?', (user_id,))
    user_info = cursor.fetchone()
    conn.close()
    return user_info if user_info and user_info[0] else None

# Simulate payment processing
def process_payment(payment_info, amount):
    # Here you would integrate with a payment service
    return True  # Simulate a successful payment

# Checkout endpoint
@app.route('/checkout', methods=['POST'])
def checkout():
    data = json.loads(request.data)
    user_id = data.get('user_id')
    cart_items = data.get('cart_items')  # List of item prices

    if not user_id or not cart_items:
        return jsonify({'error': 'Missing data'}), 400

    # Check if user is logged in and get payment info
    user_info = get_user_info(user_id)
    if not user_info:
        return jsonify({'error': 'User not logged in or not found'}), 401

    payment_info, user_address = user_info[1], user_info[2]

    total_amount = sum(cart_items) + 20  # Adding $20 shipping fee

    # Process payment
    if process_payment(payment_info, total_amount):
        # Record transaction in DB
        conn = sqlite3.connect('ecommerce.db')
        cursor = conn.cursor()
        cursor.execute('INSERT INTO transactions (user_id, total_amount, status) VALUES (?, ?, ?)',
                       (user_id, total_amount, 'Success'))
        conn.commit()
        conn.close()
        return jsonify({'message': 'Payment successful, transaction recorded', 'shipping_to': user_address}), 200
    else:
        return jsonify({'error': 'Payment failed'}), 400

if __name__ == '__main__':
    app.run(debug=True)